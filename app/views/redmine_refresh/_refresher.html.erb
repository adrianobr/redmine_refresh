<%
  interval = RedmineRefresh.refresh_interval_for(User.current, params[:refresh])
  should_be_refreshed = RedmineRefresh.refresh_status_for_controller(User.current, controller.controller_name)
  should_be_refreshed ||= params[:refresh].present?
  should_be_refreshed = false if params[:norefresh]
  RedmineRefresh.save_refresh_status_for_controller(User.current, controller.controller_name, should_be_refreshed)
%>
<script type="text/javascript">
//<![CDATA[
  //ADAPTED FROM:
  //http://www.dynamicdrive.com/dynamicindex6/refresh.htm

  //configure refresh interval (in seconds)
  var countDownTime = <%= interval + 1 %>;
  var counter;

  function countDown() {
    countDownTime--;
    $('#refresher_seconds').html(countDownTime);
    //refresh
    if (countDownTime <= 0) {
      countDownTime = <%= interval %>
      clearTimeout(counter);
      window.location.reload();
    } else {
      counter = setTimeout("countDown()", 1000);
    }
  }

  function stopCountDown(url) {
    clearTimeout(counter);
    window.location.href = url
  }

  function startCountDown(url) {
    window.location.href = url
  }

<% if should_be_refreshed %>
  $(function() { countDown(); });
<% end %>
//]]>
</script>

<% opts = {:class => 'icon icon-reload', :id => 'refresher'} %>
<% if should_be_refreshed %>
  <%= link_to_function l(:refresh_in, content_tag(:span, interval, :id => 'refresher_seconds')).html_safe,
                       "startCountDown('#{url_for(request.params.merge(:norefresh => 1).except(:refresh))}')", opts %>
<% else %>
  <%= link_to_function l(:automatic_refresh), "stopCountDown('#{url_for(request.params.merge(:refresh => interval).except(:norefresh))}')", opts %>
<% end %>
